// transition
@mixin transition($transition) {
  transition: $transition;
  -o-transition: $transition;
  -moz-transition: $transition;
  -webkit-transition: $transition;
}

// transform
@mixin transform($transform) {
  transform: $transform;
  -o-transform: $transform;
  -ms-transform: $transform;
  -moz-transform: $transform;
  -webkit-transform: $transform;
}

// animation
@mixin animation($animation) {
  animation: #{$animation};
  -o-animation: #{$animation};
  -moz-animation: #{$animation};
  -webkit-animation: #{$animation};
}

// Keyframes
@mixin keyframes($animation-name) {
  @keyframes #{$animation-name} {
    @content;
  }

  @-o-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @-webkit-keyframes #{$animation-name} {
    @content;
  }
}

@mixin fontSize($size, $line-height: null, $weight: null, $spacing: null) {
  font-size: $size;
  font-size: calculateRem($size);

  @if ($line-height) {
    line-height: #{$line-height};
    line-height: calculateRem($line-height);
  }

  @if ($weight) {
    font-weight: #{$weight};
  }

  @if ($spacing) {
    letter-spacing: #{$spacing};
  }
}

@mixin pseudoElement($position: absolute, $display: block, $content: '') {
  position: $position;
  display: $display;
  content: $content;
}

@mixin before($position: absolute, $display: block, $content: '') {
  &::before {
    @include pseudoElement($position, $display, $content)
  }
}

@mixin after($position: absolute, $display: block, $content: '') {
  &::after {
    @include pseudoElement($position, $display, $content)
  }
}

@function calculateRem($value) {
  $value: calc($value / 16px * 1rem);

  @if ($value==0rem) {
    $value: 0;
  }

  @return $value;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin flex($align: center, $justify: center, $direction: row, $gap: null) {
  display: flex;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;

  @if $gap {
    gap: $gap;
  }
}

@mixin grid($columns: 1, $gap: 0) {
  display: grid;

  @if (type_of($columns)=='number') {
    grid-template-columns: repeat($columns, 1fr);
  }

  @else {
    grid-template-columns: $columns;
  }

  gap: $gap;
}

@mixin img() {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@mixin icon($code, $fontSize: null) {
  @include pseudoElement();
  font-family: 'icomoon';
  content: $code;

  @if ($fontSize) {
    font-size: $fontSize;
  }
}

@mixin position($top: null, $right: null, $bottom: null, $left: null) {
  @if ($top) {
    top: $top;
  }

  @if ($right) {
    right: $right;
  }

  @if ($bottom) {
    bottom: $bottom;
  }

  @if ($left) {
    left: $left;
  }
}
