body[page-template-guide] {
    .container {
        padding-left: 90px;
        padding-right: 60px;
    }

    // Include this mixing for a full-width grey background on an element
    @mixin greyBg() {
        position: relative;
        background-color: $grey;

        &::before {
            @include pseudoElement();
            background-color: $grey;
            width: 9999px;
            height: 100%;
            left: -350%;
            top: 0;
            z-index: -1;
        }
    }

    // Disable header guide button
    .header .primary.link { @extend .disabled; }

    // 
    #popup {
        position: fixed;
        bottom: 0;
        right: -420px;
        width: 400px;
        min-height: 300px;
        padding: 30px;
        z-index: 999;
        background-color: $yellow;
        transition: $basicTransition, 0s background-color ease;

        &.shown { right: 0; }

        .title { 
            position: relative;
            margin: 0;
            padding-left: 40px;
            @include fontSize(30px, 34px, 600, -0.5px); 
            font-family: $primaryFont;

            &::before {
                @include pseudoElement();
                top: 0;
                left: 0;
                font-family: 'icomoon' !important;
            }
        }

        &:not(.danger) .title { @extend .icon-lightbulb; }

        &.danger {
            background-color: $red;
            color: white;

            .title { 
                padding-left: 50px;
                @extend .icon-warning; 
            }

            .content {
                a, p { color: white; }
            }
        }

        .content {
            p, a { @include fontSize(16px, 24px, 600); }

            a {
                color: $blue;
                text-decoration: underline;
            }

            figure { margin: 20px; }
            figcaption {
                @include fontSize(14px, 18px, 400);
                font-style: italic;
            }
        }

        .close {
            position: absolute;
            top: 30px;
            right: 20px;

            i {
                position: relative;
                left: 0px;
                top: 0;
                font-size: 11px;
            }
        }
    }

    // Form
    .gform_wrapper.gravity-theme {
        max-width: 100%;
        overflow: hidden;

        // Extend container class to every section
        .gf_page_steps, 
        .gform_fields, 
        .gform_page_footer { @extend .container; }

        .gfield { 
          position: relative;

          // Required
          &.required {
            h2::after,
            h3::after {
              content: " *";
              color: $red;
            }
          }
        }

        .gform_required_legend { display: none; }

        // Section pagination
        .gf_page_steps {
            @include greyBg();
            margin-bottom: -1px;
            padding-top: 60px;
            border: 0 none;

            // Hide all steps except current
            .gf_step:not(.gf_step_active) { display: none; }

            .gf_step_active {
                @include flex(center, flex-start);
                width: max-content;
                margin: 0;
                padding: 6px 25px;
                background-color: $blue;
                border-left: 5px solid $yellow;

                // Hide default label
                .gf_step_label { display: none; }

                // Harmonize fonts
                &::before,
                .gf_step_number {
                    @include fontSize(22px, 26px, 500, 1px);
                    font-family: $primaryFont;
                    color: white;
                }

                // Format 'Étape' block
                &::before {
                    @include pseudoElement(relative, inline-block, 'Étape');
                    text-transform: uppercase;
                }

                // Format step number
                .gf_step_number { 
                    display: inline-block; 
                    height: auto;
                    padding-left: 10px;
                    background: none;
                    border: 0 none; 
                    text-align: left;
                }
            }
        }

        // Section header
        .gfield.hero {
            @include greyBg();
            padding-bottom: 30px;

            summary { display: block !important; }
        }

        // Section footer
        .gform_page_footer {
            @include flex(center, space-between, 20px);
            padding-top: 50px;
            padding-bottom: 100px;

            input {
                margin: 0;
                &:last-of-type { margin-left: auto; }
            }

            .gform_ajax_spinner { 
                position: absolute; 
                right: 10px;
            }
        }

        // Error display - top section
        .gform_validation_errors {
            @extend .container;
            @include greyBg();
            margin-top: 0;
            margin-bottom: 0;
            padding-top: 70px;
            padding-bottom: 0;
            border: 0 none;
            box-shadow: none;

            h2 { 
                position: relative;
                margin: 0;
                padding-left: 30px;
                @include fontSize(18px, 22px, 500);
                font-family: $primaryFont;

                &::after { display: none; }

                .gform-icon { left: 0; }
            }
        }

        // Error display - on fields
        .validation_message {
            border: 0 none;
            padding: 0 !important;
            font-weight: 500;
            margin: 0;
            background: none;
        }
        
        // ----- FORM ELEMENTS -----

        .gfield a:not(.circle) {
            text-decoration: underline;
        }

        // Titles
        h2 {
            @extend .underline;
            margin: 60px 0 80px;

            &::after { 
                height: 4px;
                margin-top: 40px;
            }
        }

        // Add top border to h2 titles only if not the first question (counting hero as 1st element)
        .gfield_html:not(:nth-child(2)) h2 { 
            padding-top: 70px;
            border-top: 2px solid $grey;
        }

        h3 {
            margin-top: 60px;
            margin-bottom: 0;
        }

        h4 {
            margin: 30px 0 0;
            @include fontSize(22px, 24px, 500);
        }

        // Regular labels
        label { 
            @include fontSize(18px, 30px, 700);
            color: $blue;
        }

        // Show labels on linked fields when parent label is hidden (except if explicitely hidden)
        .hidden_label .link-previous-field:not(.hidden_label) .gfield_label {
            clip: initial;
            word-wrap: initial;
            border: initial;
            -webkit-clip-path: initial;
            clip-path: initial;
            height: initial;
            margin: initial;
            overflow: initial;
            padding: 20px 0 0;
            position: initial;
            width: initial;
        }

        // Text inputs
        input[type="text"] { height: 44px; }

        input[type="text"], 
        textarea {
            border: 1px solid $altgrey;
            border-radius: 3px;
            outline-offset: -1px;
            outline: solid 1px rgba($yellow, 0);
            transition: $inputTransition;
            font-family: $secondaryFont;
            @include fontSize(16px, 20px, 400, 0.3px);

            &:focus,
            &:focus-visible { 
                outline-color: $yellow;
                border-color: $yellow;
            }
        }

        // Adjust textarea spacing when moved into another field
        .link-previous-field textarea { margin-top: 16px; }

        // Override infobox settings
        .infobox h3 { 
            margin-top: 0;
            text-transform: none;
        }

        // Radio/Checkbox buttons (common properties)
        .gchoice {
            position: relative;
            padding-bottom: 6px;

            & > label {
                padding-left: 30px;
                @include fontSize(18px, 24px, 400);

                &::before {
                    @include pseudoElement();
                    left: 0;
                    top: 6px;
                    width: 20px;
                    height: 20px;
                    border: 1px solid $altgrey;
                    transition: $inputTransition;
                }

                &:hover::before {
                    border-color: $yellow;
                }
            }

            & > input {
                appearance: none;
                -webkit-appearance: none;
    
                &:checked ~ label {
                    // Outline
                    &::before {
                        border-color: $yellow;
                        background-color: $yellow;
                    }

                    // Checked
                    &::after { 
                        @include pseudoElement();
                        top: 11px;
                        left: 5px;
                        width: 10px;
                        height: 10px;
                        background-color: $blue;
                        border-radius: 50%;
                    }
                }
            }

            // Add an explaination to a specific checkbox/radio
            span {     
                display: block;
                @include fontSize(14px, 17px, 400);
                font-style: italic;
                color: $altgrey;
            }
        }

        // Radio buttons
        .gfield_radio {
            .gchoice {
                // Empty circle
                & > label::before { border-radius: 50%; }

                // Checked circle
                & > input:checked ~ label::after { 
                    border-radius: 50%;
                }
            }
        }

        // Checkbox
        .gfield_checkbox {
            .gchoice {
                // Empty checkbox
                & > label::before { border-radius: 4px; }

                // Checked checkbox
                & > input:checked ~ label::after { 
                    border-radius: 3px;
                }
            }
        }
        // Checkbox fields on multiple columns
        .gfield.columns-2 .gfield_checkbox { @include grid(2); }

        // Buttons
        .button {
            @extend .btn;
            min-width: 350px;
        }
    
        // Submit/Next button
        .gform_next_button, .gform_button {
            @extend .primary;
        }

        // Previous button
        .gform_previous_button {
            @extend .secondary;
        }
        
        // TEMP
        .gform_save_link { display: none; }

        // ----- Helper fields -----

        // This field contains popup text, which is copied via JS to popup element
        .extra { display: none !important; }

        // Override circle button properties
        .circle {
            position: absolute;
            top: 64px;
            left: -70px;

            &::before {
                position: relative;
                left: 0;
                top: 0;
                font-size: 26px;
                font-family: 'icomoon' !important;
            }

            &.danger {
                @extend .red;
                @extend .icon-warning; 
            }

            &:not(.danger) {
                @extend .icon-lightbulb; 
            }
            
        }
    }

    @media (max-width: calc($tablet-large - 1px)) {
        .gform_wrapper.gravity-theme {
            .gform_page_footer {
                // input {}
            }

            .button {
                min-width: auto;
            }
        }
    }

    @media (max-width: calc($tablet - 1px)) {
        .container {
            width: 100%;
            padding: 0 40px;
        }

        .gform_wrapper.gravity-theme {
            .gform_page_footer {
                padding-top: 50px !important;
                padding-bottom: 90px !important;
            }
    
            .gf_page_steps { padding-top: 40px !important; }

            h2 { margin: 40px 0 80px; }
            h3 { margin-top: 30px; }

            .gfield { 
                // Make room for popup button
                &.has-btn {
                    h2 { margin-top: 90px; }
                    h3 { margin-top: 80px; }
                }
            }

            // Columns checkbox
            .gfield.columns-2 .gfield_checkbox { display: block; }

            // Remove forced box content on list elements
            .gfield_list_group {
                position: relative;
                padding: 20px 0;
                border: 0 none !important;
                &:not(:last-child) { border-bottom: 1px solid $grey; }

                .gfield_list_group_item:nth-last-child(2) { padding-right: 50px; }

                .gfield_list_icons {
                    position: absolute;
                    bottom: 45px;
                    right: 0;
                    background: none;
                }
                .gfield_list_group_item:before { @include fontSize(18px, 30px, 400); }
            }

            // Move circle popup icons on top
            .circle { @include position(22px, $left: 0); }
            .gfield_html:not(:nth-child(2)) h2 { padding-top: 40px; }

            .button { min-width: 0; }
        }
    }

    @media (max-width: $lg-mobile) {
        .container {
            padding: 0 25px;
        }
    }
}